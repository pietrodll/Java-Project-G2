package ride;

import java.io.ObjectStreamException;
import java.io.Serializable;
import java.util.ArrayList;
import sorting.station.SortingStrategy;
import station.Station;
import java.util.Collections;
import java.util.Comparator;

public class Network implements Serializable {
	
	/**
	 * Generated by Papyrus
	 */
	private static final long serialVersionUID = -3127825538872149011L;
	

	private static Network instance = null;
	private static ArrayList<Station> stations;
	private static ArrayList<Ride> rideHistory;
	
	private Network() {}
	
	public static synchronized Network getInstance() {
		if (instance == null) { instance = new Network(); }
		return instance;
	}
	
	public ArrayList<Station> getStations() { return this.stations; }
	
	public Object readResolve() throws ObjectStreamException { return instance; }
	
	public void addStation(Station station) {
		this.stations.add(station);
	}
	
	

	public static ArrayList<Station> sortingStations (SortingStrategy s) {
		ArrayList<Station> sortedStations = (ArrayList<Station>) stations.clone();		
		return s.sorting(sortedStations);
	}
	
	public static void archiveRide (Ride r) {
		rideHistory.add(r);
	}
}
